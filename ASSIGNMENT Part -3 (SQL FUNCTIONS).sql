##FUNCTIONS##


#Q1)Retrieve the total number of rentals made in the Sakila database.
use sakila;
select count(customer_id) as total_rental from rental;

#Q2)Find the average rental duration (in days) of movies rented from the Sakila database.
select avg(DATEDIFF(return_date,rental_date)) as Average_rental_duration from rental;

#Q3)Display the first name and last name of customers in uppercase.
select upper(first_name) as first_name, upper(last_name) as last_name from customer;

#Q4)Extract the month from the rental date and display it alongside the rental ID.
select rental_id,month(rental_date) as rental_month 
from rental;

#Q5)Retrieve the count of rentals for each customer (display customer ID and the count of rentals
select customer_id,count(rental_id) as total_rentals
from rental
group by customer_id;

#Q6)Find the total revenue generated by each store.
select store.store_id,sum(payment.amount) as Total_revenue
from payment join
staff on payment.staff_id=staff.staff_id
join store on staff.store_id=store.store_id
group by store.store_id;

#Q7)Determine the total number of rentals for each category of movies
SELECT fc.category_id, COUNT(r.rental_id) AS total_rentals
FROM rental r
JOIN film f ON r.inventory_id = f.film_id     -- simplified join (not accurate in Sakila)
JOIN film_category fc ON f.film_id = fc.film_id
GROUP BY fc.category_id;

#Q8)Find the average rental rate of movies in each language
select language.name,ifnull(avg(film.rental_rate) ,0) as Avg_Rate
from film left join language on
film.language_id=language.language_id
group by language.language_id,language.name
ORDER BY language.language_id;

-- another query
SELECT l.language_id,
       l.name AS language_name,
       COUNT(f.film_id) AS total_films,
       IFNULL(AVG(f.rental_rate), 0) AS avg_rate
FROM language l
LEFT JOIN film f 
       ON f.language_id = l.language_id
GROUP BY l.language_id, l.name
ORDER BY l.language_id;

